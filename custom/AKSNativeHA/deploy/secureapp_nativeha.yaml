# Â© Copyright IBM Corporation 2021, 2022
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# license must be set to "accept" to accept the terms of the IBM license
license: accept

image:
  # repository is the container repository to use
  repository: icr.io/ibm-messaging/mq
  # tag is the tag to use for the container repository
  tag: 9.3.3.1-r2
  # pullSecret is the secret to use when pulling the image from a private registry
  pullSecret:
  # pullPolicy is either IfNotPresent or Always (https://kubernetes.io/docs/concepts/containers/images/)
  pullPolicy: IfNotPresent

persistence:
  # dataPVC section specifies settings for the main Persistent Volume Claim, which is used for data in /var/mqm -> /mnt/mqm
  dataPVC:
    # enabled is whether to use this Persistent Volumes or not
    enable: false
    ## storageClass to use for this PVCs
    storageClassName: ""
    ## size is the minimum size of the Persistent Volume
    size: 2Gi

  # logPVC section specifies settings for the main Persistent Volume Claim, which is used for log in /mnt/mqm-log
  logPVC:
    # enabled is whether to use this Persistent Volumes or not
    enable: false
    ## storageClass to use for this PVCs
    storageClassName: ""
    ## size is the minimum size of the Persistent Volume
    size: 2Gi

  # dataPVC section specifies settings for the main Persistent Volume Claim, which is used for data in /mnt/mqm-data
  qmPVC:
    # enabled is whether to use this Persistent Volumes or not
    enable: true
    ## storageClass to use for this PVCs
    storageClassName: "managed"
    ## size is the minimum size of the Persistent Volume
    size: 2Gi

security:
  # context section specifies additional security context settings for the pod
  context:
    fsGroup: 0
  # initVolumeAsRoot specifies whether or not storage provider requires root permissions to initialize
  initVolumeAsRoot: false

# queueManager section specifies settings for the MQ Queue Manager
queueManager:
  # name allows you to specify the name to use for the queue manager.  Defaults to the Helm release name.
  name: QMNHA
  # nativeha specifies whether to run in nativeha mode with an active and two following container instances
  nativeha:
    enable: true
    tls:
      secretName: helmsecure
  # multiinstance specifies whether to run in multiinstance mode with an active and one standby container instances
  multiinstance:
    enable: false
  # Allows MQSC snippets to be loaded from configMaps. These will be loaded into the running instance
  mqscSecrets:
    - name: mqscsecret
      items:
        - mq.mqsc
  # Allows QM INI snippets to be loaded from configMaps. These will be loaded into the running instance
  qminiSecrets:
    - name: inisecret
      items:
        - mq.ini

# metadata allows setting of additional labels and annottations to be added to all resources.
metadata:
  annotations:
    productName: "IBM MQ Advanced for Developers"
    productID: "2f886a3eefbe4ccb89b2adb97c78b9cb"
    productChargedContainers: ""
    productMetric: "FREE"

# pki is used to supply certificates, that are stored in k8s secrets, for use with the webconsole and queue manager.
pki:
  keys:
    - name: default
      secret:
        secretName: helmsecure
        items:
          - tls.key
          - tls.crt
  trust:
    - name: default
      secret:
        secretName: helmsecure
        items:
          - app.crt

# route section specified if any additional Kubernetes services  should be defined
route:
  nodePort:
    webconsole: true
    mqtraffic: true
  loadBalancer:
    webconsole: true
    mqtraffic: true
